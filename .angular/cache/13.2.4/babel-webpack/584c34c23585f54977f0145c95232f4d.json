{"ast":null,"code":"import { AuthGuard } from 'app/core/auth/guards/auth.guard';\nimport { NoAuthGuard } from 'app/core/auth/guards/noAuth.guard';\nimport { LayoutComponent } from 'app/layout/layout.component';\nimport { InitialDataResolver } from 'app/app.resolvers'; // @formatter:off\n\n/* eslint-disable max-len */\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\nexport const appRoutes = [// // Redirect empty path to '/example'\n{\n  path: '',\n  pathMatch: 'full',\n  redirectTo: 'dashboards'\n}, // Redirect signed in user to the '/example'\n//\n// After the user signs in, the sign in page will redirect the user to the 'signed-in-redirect'\n// path. Below is another redirection for that path to redirect the user to the desired\n// location. This is a small convenience to keep all main routes together here on this file.\n{\n  path: 'signed-in-redirect',\n  pathMatch: 'full',\n  redirectTo: 'dashboards'\n}, // Auth routes for guests\n{\n  path: '',\n  canActivate: [NoAuthGuard],\n  canActivateChild: [NoAuthGuard],\n  component: LayoutComponent,\n  data: {\n    layout: 'empty'\n  },\n  children: [{\n    path: 'confirmation-required',\n    loadChildren: () => import('app/modules/auth/confirmation-required/confirmation-required.module').then(m => m.AuthConfirmationRequiredModule)\n  }, {\n    path: 'forgot-password',\n    loadChildren: () => import('app/modules/auth/forgot-password/forgot-password.module').then(m => m.AuthForgotPasswordModule)\n  }, {\n    path: 'reset-password',\n    loadChildren: () => import('app/modules/auth/reset-password/reset-password.module').then(m => m.AuthResetPasswordModule)\n  }, {\n    path: 'sign-in',\n    loadChildren: () => import('app/modules/auth/sign-in/sign-in.module').then(m => m.AuthSignInModule)\n  }, {\n    path: 'sign-up',\n    loadChildren: () => import('app/modules/auth/sign-up/sign-up.module').then(m => m.AuthSignUpModule)\n  }]\n}, // Auth routes for authenticated users\n{\n  path: '',\n  component: LayoutComponent,\n  data: {\n    layout: 'empty'\n  },\n  children: [{\n    path: 'sign-out',\n    loadChildren: () => import('app/modules/auth/sign-out/sign-out.module').then(m => m.AuthSignOutModule),\n    canActivate: [AuthGuard]\n  }, {\n    path: 'unlock-session',\n    loadChildren: () => import('app/modules/auth/unlock-session/unlock-session.module').then(m => m.AuthUnlockSessionModule)\n  }]\n}, // Landing routes\n{\n  path: '',\n  component: LayoutComponent,\n  data: {\n    layout: 'empty'\n  },\n  children: [{\n    path: 'home',\n    loadChildren: () => import('app/modules/landing/home/home.module').then(m => m.LandingHomeModule)\n  }]\n}, // Admin routes\n{\n  path: '',\n  // canActivate: [AuthGuard],\n  // canActivateChild: [AuthGuard],\n  component: LayoutComponent,\n  resolve: {\n    initialData: InitialDataResolver\n  },\n  data: {\n    breadcrumb: {\n      label: '',\n      url: '/'\n    }\n  },\n  children: [{\n    path: 'example',\n    loadChildren: () => import('app/modules/admin/example/example.module').then(m => m.ExampleModule),\n    data: {\n      breadcrumb: {\n        label: 'example',\n        url: '/'\n      }\n    }\n  }, {\n    path: 'dashboards',\n    loadChildren: () => import('app/modules/admin/dashboards/dashboards.module').then(m => m.DashboardsModule),\n    data: {\n      breadcrumb: {\n        label: '',\n        url: ''\n      }\n    }\n  }, {\n    path: 'consent',\n    loadChildren: () => import('app/modules/admin/history/history.module').then(m => m.HistoryModule),\n    data: {\n      breadcrumb: {\n        label: 'Consent',\n        url: '/consent'\n      }\n    }\n  }, {\n    path: 'scripts',\n    loadChildren: () => import('app/modules/admin/scripts/scripts.module').then(m => m.ScriptsModule),\n    data: {\n      breadcrumb: {\n        label: 'Scripts',\n        url: '/scripts'\n      }\n    }\n  }, // datalake-management\n  {\n    path: 'cluster-manager',\n    loadChildren: () => import('app/modules/admin/datalake-management/cluster-manager/cluster-manager.module').then(m => m.ClusterManagerModule),\n    data: {\n      breadcrumb: {\n        label: 'Cluster Manager',\n        url: ''\n      }\n    }\n  }, {\n    path: 'lb-manager',\n    loadChildren: () => import('app/modules/admin/datalake-management/lb-manager/lb-manager.module').then(m => m.LbManagerModule),\n    data: {\n      breadcrumb: {\n        label: 'LB Manager',\n        url: ''\n      }\n    }\n  }, {\n    path: 'thrift-manager',\n    loadChildren: () => import('app/modules/admin/datalake-management/thrift-manager/thrift-manager.module').then(m => m.ThriftManagerModule),\n    data: {\n      breadcrumb: {\n        label: 'Thrift Manager',\n        url: ''\n      }\n    }\n  }, // utility\n  {\n    path: 'support-request',\n    loadChildren: () => import('app/modules/admin/utility/support-request/support-request.module').then(m => m.SupportRequestModule),\n    data: {\n      breadcrumb: {\n        label: 'Support Request',\n        url: ''\n      }\n    }\n  }, {\n    path: 'process-manager',\n    loadChildren: () => import('app/modules/admin/utility/process-manager/process-manager.module').then(m => m.ProcessManagerModule),\n    data: {\n      breadcrumb: {\n        label: 'Process Manager',\n        url: ''\n      }\n    }\n  }, {\n    path: 'ingestion-and-provisioning',\n    loadChildren: () => import('app/modules/admin/utility/ingestion-and-provisioning/ingestion-and-provisioning.module').then(m => m.IngestionAndProvisioningModule),\n    data: {\n      breadcrumb: {\n        label: 'Ingestion And Provisioning',\n        url: ''\n      }\n    }\n  }, {\n    path: 'hdfs-tool',\n    loadChildren: () => import('app/modules/admin/utility/hdfs-tool/hdfs-tool.module').then(m => m.HdfsToolModule),\n    data: {\n      breadcrumb: {\n        label: 'Hdfs Tools',\n        url: ''\n      }\n    }\n  }, {\n    path: 'etl-tool',\n    loadChildren: () => import('app/modules/admin/utility/etl-tool/etl-tool.module').then(m => m.EtlToolModule),\n    data: {\n      breadcrumb: {\n        label: 'ETL Tools',\n        url: ''\n      }\n    }\n  }, {\n    path: 'encrypt-tool',\n    loadChildren: () => import('app/modules/admin/utility/encrypt-tool/encrypt-tool.module').then(m => m.EncryptToolModule),\n    data: {\n      breadcrumb: {\n        label: 'encrypt-tool',\n        url: 'encrypt-tool'\n      }\n    }\n  }, {\n    path: 'upload-file',\n    loadChildren: () => import('app/modules/admin/utility/upload-file/upload-file.module').then(m => m.UploadFileModule),\n    data: {\n      breadcrumb: {\n        label: 'Upload File',\n        url: 'upload-file'\n      }\n    }\n  }, {\n    path: 'config-make-file-db',\n    loadChildren: () => import('app/modules/admin/utility/config-make-file-db/config-make-file-db.module').then(m => m.ConfigMakeFileDbModule),\n    data: {\n      breadcrumb: {\n        label: 'Config Make File DB',\n        url: 'config-make-file-db'\n      }\n    }\n  }, // setting\n  {\n    path: 'setting',\n    loadChildren: () => import('app/modules/admin/setting/setting.module').then(m => m.SettingModule),\n    data: {\n      breadcrumb: {\n        label: 'Setting',\n        url: ''\n      }\n    }\n  }]\n}];","map":null,"metadata":{},"sourceType":"module"}