{"ast":null,"code":"import { BaseComponent } from \"../../../../core/base.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/material/button\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/icon\";\n\nfunction CategoryComponent_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function CategoryComponent_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.add();\n    });\n    i0.ɵɵtext(1, \"Add Cookie\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CategoryComponent_ng_container_5_mat_icon_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-icon\", 12);\n    i0.ɵɵlistener(\"click\", function CategoryComponent_ng_container_5_mat_icon_12_Template_mat_icon_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const i_r5 = i0.ɵɵnextContext().index;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.delete(i_r5);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"svgIcon\", \"heroicons_solid:trash\");\n  }\n}\n\nfunction CategoryComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 6)(2, \"div\", 7)(3, \"mat-form-field\", 8)(4, \"mat-label\");\n    i0.ɵɵtext(5, \"Cookie Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 7)(8, \"mat-form-field\", 8)(9, \"mat-label\");\n    i0.ɵɵtext(10, \"Cookie Value\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(12, CategoryComponent_ng_container_5_mat_icon_12_Template, 1, 1, \"mat-icon\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const cookieForm_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", cookieForm_r4);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"readonly\", ctx_r1.readonly);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"readonly\", ctx_r1.readonly);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.readonly);\n  }\n}\n\nexport let CategoryComponent = /*#__PURE__*/(() => {\n  class CategoryComponent extends BaseComponent {\n    constructor(injector) {\n      super(injector);\n      this.readonly = false;\n    }\n\n    ngOnInit() {}\n\n    add() {\n      const lessonForm = this.fb.group({\n        name: [''],\n        value: ['']\n      });\n      this.formArray.push(lessonForm);\n    }\n\n    delete(index) {\n      this.formArray.removeAt(index);\n    }\n\n  }\n\n  CategoryComponent.ɵfac = function CategoryComponent_Factory(t) {\n    return new (t || CategoryComponent)(i0.ɵɵdirectiveInject(i0.Injector));\n  };\n\n  CategoryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CategoryComponent,\n    selectors: [[\"app-category\"]],\n    inputs: {\n      formArray: \"formArray\",\n      readonly: \"readonly\",\n      categoryName: \"categoryName\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 6,\n    vars: 3,\n    consts: [[1, \"py-4\"], [1, \"flex\", \"justify-between\", \"w-full\", \"mb-2\"], [1, \"text-lg\", \"font-bold\"], [\"mat-stroked-button\", \"\", \"color\", \"primary\", 3, \"click\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"mat-stroked-button\", \"\", \"color\", \"primary\", 3, \"click\"], [1, \"flex\", \"w-full\", \"gap-2\", \"items-center\", \"mb-2\", 3, \"formGroup\"], [1, \"w-full\"], [\"appearance\", \"fill\", 1, \"w-full\"], [\"matInput\", \"\", \"formControlName\", \"name\", \"placeholder\", \"Cookie Name\", 1, \"w-full\", 3, \"readonly\"], [\"matInput\", \"\", \"formControlName\", \"value\", \"placeholder\", \"Cookie value\", 1, \"w-full\", 3, \"readonly\"], [\"class\", \"icon-size-5 cursor-pointer\", 3, \"svgIcon\", \"click\", 4, \"ngIf\"], [1, \"icon-size-5\", \"cursor-pointer\", 3, \"svgIcon\", \"click\"]],\n    template: function CategoryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, CategoryComponent_button_4_Template, 2, 0, \"button\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, CategoryComponent_ng_container_5_Template, 13, 4, \"ng-container\", 4);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.categoryName);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.readonly);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.formArray.controls);\n      }\n    },\n    directives: [i1.NgIf, i2.MatButton, i1.NgForOf, i3.NgControlStatusGroup, i3.FormGroupDirective, i4.MatFormField, i4.MatLabel, i5.MatInput, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i6.MatIcon],\n    styles: [\"\"]\n  });\n  return CategoryComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}