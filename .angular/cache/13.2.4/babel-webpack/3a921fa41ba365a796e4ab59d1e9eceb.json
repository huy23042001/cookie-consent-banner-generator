{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { fuseAnimations } from '@fuse/animations';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"app/core/auth/auth.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"app/core/user/user.service\";\nconst _c0 = [\"unlockSessionNgForm\"];\n\nconst _c1 = function () {\n  return [\"/sign-in\"];\n};\n\nexport let AuthUnlockSessionComponent = /*#__PURE__*/(() => {\n  class AuthUnlockSessionComponent {\n    /**\n     * Constructor\n     */\n    constructor(_activatedRoute, _authService, _formBuilder, _router, _userService) {\n      this._activatedRoute = _activatedRoute;\n      this._authService = _authService;\n      this._formBuilder = _formBuilder;\n      this._router = _router;\n      this._userService = _userService;\n      this.alert = {\n        type: 'success',\n        message: ''\n      };\n      this.showAlert = false;\n    } // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n\n\n    ngOnInit() {\n      // Get the user's name\n      this._userService.user$.subscribe(user => {\n        this.name = user.login;\n        this._email = user.email;\n      }); // Create the form\n\n\n      this.unlockSessionForm = this._formBuilder.group({\n        name: [{\n          value: this.name,\n          disabled: true\n        }],\n        password: ['', Validators.required]\n      });\n    } // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Unlock\n     */\n\n\n    unlock() {\n      var _a; // Return if the form is invalid\n\n\n      if (this.unlockSessionForm.invalid) {\n        return;\n      } // Disable the form\n\n\n      this.unlockSessionForm.disable(); // Hide the alert\n\n      this.showAlert = false;\n\n      this._authService.unlockSession({\n        email: (_a = this._email) !== null && _a !== void 0 ? _a : '',\n        password: this.unlockSessionForm.get('password').value\n      }).subscribe(() => {\n        // Set the redirect url.\n        // The '/signed-in-redirect' is a dummy url to catch the request and redirect the user\n        // to the correct page after a successful sign in. This way, that url can be set via\n        // routing file and we don't have to touch here.\n        const redirectURL = this._activatedRoute.snapshot.queryParamMap.get('redirectURL') || '/signed-in-redirect'; // Navigate to the redirect url\n\n        this._router.navigateByUrl(redirectURL);\n      }, response => {\n        // Re-enable the form\n        this.unlockSessionForm.enable(); // Reset the form\n\n        this.unlockSessionNgForm.resetForm({\n          name: {\n            value: this.name,\n            disabled: true\n          }\n        }); // Set the alert\n\n        this.alert = {\n          type: 'error',\n          message: 'Invalid password'\n        }; // Show the alert\n\n        this.showAlert = true;\n      });\n    }\n\n  }\n\n  AuthUnlockSessionComponent.ɵfac = function AuthUnlockSessionComponent_Factory(t) {\n    return new (t || AuthUnlockSessionComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i4.UserService));\n  };\n\n  AuthUnlockSessionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AuthUnlockSessionComponent,\n    selectors: [[\"auth-unlock-session\"]],\n    viewQuery: function AuthUnlockSessionComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.unlockSessionNgForm = _t.first);\n      }\n    },\n    decls: 17,\n    vars: 2,\n    consts: [[1, \"flex\", \"flex-col\", \"flex-auto\", \"items-center\", \"sm:justify-center\", \"min-w-0\"], [1, \"w-full\", \"sm:w-auto\", \"py-8\", \"px-4\", \"sm:p-12\", \"sm:rounded-2xl\", \"sm:shadow\", \"sm:bg-card\"], [1, \"w-full\", \"max-w-120\", \"sm:w-120\", \"mx-auto\", \"sm:mx-0\"], [1, \"w-30\", \"mx-auto\"], [\"src\", \"assets/images/logo/logo-text-on-light.svg\"], [1, \"mt-8\", \"text-4xl\", \"font-extrabold\", \"tracking-tight\", \"leading-tight\", \"text-center\", \"mb-4\"], [1, \"text-center\", \"mt-0.5\", \"font-medium\"], [1, \"mt-8\", \"text-md\", \"font-medium\", \"text-secondary\", \"text-center\"], [1, \"ml-1\", \"text-primary-500\", \"hover:underline\", 3, \"routerLink\"]],\n    template: function AuthUnlockSessionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n        i0.ɵɵelement(4, \"img\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 5);\n        i0.ɵɵtext(6, \"Y\\u00EAu c\\u1EA7u quy\\u1EC1n truy c\\u1EADp\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"div\");\n        i0.ɵɵtext(9, \"Li\\u00EAn h\\u1EC7 v\\u1EDBi ban qu\\u1EA3n tr\\u1ECB \\u0111\\u1EC3 \\u0111\\u01B0\\u1EE3c c\\u1EA5p quy\\u1EC1n s\\u1EED d\\u1EE5ng h\\u1EC7 th\\u1ED1ng\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\");\n        i0.ɵɵtext(11, \"\\u0110\\u1EA7u m\\u1ED1i: quanvd - quanvd@is.com.vn - 0866926762\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 7)(13, \"span\");\n        i0.ɵɵtext(14, \"Quay l\\u1EA1i\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"a\", 8);\n        i0.ɵɵtext(16, \"\\u0110\\u0103ng nh\\u1EADp \");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(1, _c1));\n      }\n    },\n    directives: [i1.RouterLinkWithHref],\n    encapsulation: 2,\n    data: {\n      animation: fuseAnimations\n    }\n  });\n  return AuthUnlockSessionComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}