{"ast":null,"code":"import { distinctUntilChanged, filter, takeUntil } from \"rxjs/operators\";\nimport { NavigationEnd } from \"@angular/router\";\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/icon\";\n\nfunction BreadcrumbComponent_ng_container_1_mat_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-icon\", 5);\n  }\n}\n\nfunction BreadcrumbComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 2);\n    i0.ɵɵtemplate(2, BreadcrumbComponent_ng_container_1_mat_icon_2_Template, 1, 0, \"mat-icon\", 3);\n    i0.ɵɵelementStart(3, \"span\", 4);\n    i0.ɵɵlistener(\"click\", function BreadcrumbComponent_ng_container_1_Template_span_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.navigateToUrl(item_r1.url);\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", i_r2 !== 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"cursor-pointer\", item_r1.url)(\"text-lime-600\", i_r2 === ctx_r0.breadcrumbs.length - 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r1 == null ? null : item_r1.label, \" \");\n  }\n}\n\nexport let BreadcrumbComponent = /*#__PURE__*/(() => {\n  class BreadcrumbComponent {\n    constructor(activeRoute, router) {\n      this.activeRoute = activeRoute;\n      this.router = router;\n      this.breadcrumbs = [];\n      this.destroyAll$ = new Subject();\n      this.breadcrumbs = this.buildBreadCrumb(this.activeRoute.root);\n      console.log(this.breadcrumbs);\n    }\n\n    ngOnInit() {\n      this.router.events.pipe(filter(event => event instanceof NavigationEnd), distinctUntilChanged(), takeUntil(this.destroyAll$)).subscribe(() => {\n        this.breadcrumbs = this.buildBreadCrumb(this.activeRoute.root);\n      });\n    }\n\n    buildBreadCrumb(route, breadcrumbs = []) {\n      //If no routeConfig is avalailable we are on the root path\n      // @ts-ignore\n      let breadcrumbData = route.routeConfig && route.routeConfig.data ? route.routeConfig.data.breadcrumb : ''; // Only adding route with non-empty label\n\n      const newBreadcrumbs = breadcrumbData.label ? [...breadcrumbs, breadcrumbData] : [...breadcrumbs];\n\n      if (route.firstChild) {\n        //If we are not on our current path yet,\n        //there will be more children to look after, to build our breadcumb\n        return this.buildBreadCrumb(route.firstChild, newBreadcrumbs);\n      }\n\n      return newBreadcrumbs;\n    }\n\n    ngOnDestroy() {\n      this.destroyAll$.next(null);\n      this.destroyAll$.complete();\n    }\n\n    navigateToUrl(url) {\n      if (!url) return;\n      this.router.navigateByUrl(url);\n    }\n\n  }\n\n  BreadcrumbComponent.ɵfac = function BreadcrumbComponent_Factory(t) {\n    return new (t || BreadcrumbComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router));\n  };\n\n  BreadcrumbComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BreadcrumbComponent,\n    selectors: [[\"app-breadcrumb\"]],\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"breadcrums\", \"ml-5\", \"flex\", \"items-center\"], [4, \"ngFor\", \"ngForOf\"], [1, \"flex\", \"items-center\"], [\"class\", \"icon-size-4\", \"svgIcon\", \"heroicons_outline:chevron-double-right\", 4, \"ngIf\"], [1, \"px-3\", 3, \"click\"], [\"svgIcon\", \"heroicons_outline:chevron-double-right\", 1, \"icon-size-4\"]],\n    template: function BreadcrumbComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, BreadcrumbComponent_ng_container_1_Template, 5, 6, \"ng-container\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.breadcrumbs);\n      }\n    },\n    directives: [i2.NgForOf, i2.NgIf, i3.MatIcon],\n    styles: [\"\"]\n  });\n  return BreadcrumbComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}