{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/table\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/paginator\";\n\nfunction DataTableComponent_ng_container_1_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 8)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const column_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"width\", ctx_r5.calcColumnWidth(column_r4));\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"pl-4\", column_r4.columnDef === \"action\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(column_r4.header);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction DataTableComponent_ng_container_1_td_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementContainer(1, 13);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const row_r8 = i0.ɵɵnextContext().$implicit;\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r9.actionTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c0, row_r8));\n  }\n}\n\nfunction DataTableComponent_ng_container_1_td_2_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const row_r8 = i0.ɵɵnextContext().$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r10.getRowIndex(row_r8) + 1);\n  }\n}\n\nfunction DataTableComponent_ng_container_1_td_2_ng_container_4_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 15);\n  }\n\n  if (rf & 2) {\n    const row_r8 = i0.ɵɵnextContext(2).$implicit;\n    const column_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"innerHTML\", column_r4.cellRenderer ? column_r4.cellRenderer(row_r8) : row_r8[column_r4.columnDef], i0.ɵɵsanitizeHtml);\n  }\n}\n\nconst _c1 = function (a0, a1) {\n  return {\n    row: a0,\n    column: a1\n  };\n};\n\nfunction DataTableComponent_ng_container_1_td_2_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementContainer(1, 13);\n    i0.ɵɵtemplate(2, DataTableComponent_ng_container_1_td_2_ng_container_4_ng_template_2_Template, 1, 1, \"ng-template\", null, 14, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const _r14 = i0.ɵɵreference(3);\n\n    const row_r8 = i0.ɵɵnextContext().$implicit;\n    const column_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r11.rowTemplate || _r14)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c1, row_r8, column_r4));\n  }\n}\n\nfunction DataTableComponent_ng_container_1_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 9);\n    i0.ɵɵelementContainerStart(1, 10);\n    i0.ɵɵtemplate(2, DataTableComponent_ng_container_1_td_2_ng_container_2_Template, 2, 4, \"ng-container\", 11);\n    i0.ɵɵtemplate(3, DataTableComponent_ng_container_1_td_2_ng_container_3_Template, 3, 1, \"ng-container\", 11);\n    i0.ɵɵtemplate(4, DataTableComponent_ng_container_1_td_2_ng_container_4_Template, 4, 5, \"ng-container\", 12);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitch\", column_r4.columnDef);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"action\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"stt\");\n  }\n}\n\nfunction DataTableComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 5);\n    i0.ɵɵtemplate(1, DataTableComponent_ng_container_1_th_1_Template, 3, 5, \"th\", 6);\n    i0.ɵɵtemplate(2, DataTableComponent_ng_container_1_td_2_Template, 5, 3, \"td\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const column_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"matColumnDef\", column_r4.columnDef);\n  }\n}\n\nfunction DataTableComponent_tr_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 16);\n  }\n}\n\nfunction DataTableComponent_tr_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 17);\n  }\n}\n\nconst _c2 = function () {\n  return [5, 10, 20];\n};\n\nfunction DataTableComponent_mat_paginator_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-paginator\", 18);\n    i0.ɵɵlistener(\"page\", function DataTableComponent_mat_paginator_4_Template_mat_paginator_page_0_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return ctx_r22.changePage($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"pageSizeOptions\", i0.ɵɵpureFunction0(3, _c2))(\"pageSize\", ctx_r3.limit)(\"length\", ctx_r3.count);\n  }\n}\n\nexport let DataTableComponent = /*#__PURE__*/(() => {\n  class DataTableComponent {\n    constructor(cdk) {\n      this.cdk = cdk;\n      this.rows = [];\n      this.columns = [];\n      this.limit = 10;\n      this.count = 0;\n      this.paginate = true;\n      this.pageChange = new EventEmitter();\n    }\n\n    get displayedColumns() {\n      return this.columns.map(c => c.columnDef);\n    }\n\n    ngOnInit() {}\n\n    ngOnChanges(changes) {}\n\n    changePage(e) {\n      this.pageChange.emit(e);\n    }\n\n    calcColumnWidth(column) {\n      var _a, _b;\n\n      if (this.columnWidth) {\n        return this.columnWidth;\n      }\n\n      const totalFlex = (_a = this.columns) === null || _a === void 0 ? void 0 : _a.reduce((total, col) => {\n        var _a;\n\n        return ((_a = col.flex) !== null && _a !== void 0 ? _a : 1) + total;\n      }, 0);\n      return ((_b = column.flex) !== null && _b !== void 0 ? _b : 1) / totalFlex + '%';\n    }\n\n    getRowIndex(row) {\n      return this.rows.indexOf(row);\n    }\n\n  }\n\n  DataTableComponent.ɵfac = function DataTableComponent_Factory(t) {\n    return new (t || DataTableComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  DataTableComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DataTableComponent,\n    selectors: [[\"app-data-table\"]],\n    inputs: {\n      rows: \"rows\",\n      columns: \"columns\",\n      limit: \"limit\",\n      count: \"count\",\n      columnWidth: \"columnWidth\",\n      paginate: \"paginate\",\n      actionTemplate: \"actionTemplate\",\n      rowTemplate: \"rowTemplate\"\n    },\n    outputs: {\n      pageChange: \"pageChange\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 5,\n    vars: 7,\n    consts: [[\"mat-table\", \"\", 1, \"demo-table\", \"w-full\", 3, \"dataSource\"], [3, \"matColumnDef\", 4, \"ngFor\", \"ngForOf\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"showFirstLastButtons\", \"\", 3, \"pageSizeOptions\", \"pageSize\", \"length\", \"page\", 4, \"ngIf\"], [3, \"matColumnDef\"], [\"mat-header-cell\", \"\", 3, \"width\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"defaultRowTemplate\", \"\"], [1, \"whitespace-nowrap\", 3, \"innerHTML\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"], [\"showFirstLastButtons\", \"\", 3, \"pageSizeOptions\", \"pageSize\", \"length\", \"page\"]],\n    template: function DataTableComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"table\", 0);\n        i0.ɵɵtemplate(1, DataTableComponent_ng_container_1_Template, 3, 1, \"ng-container\", 1);\n        i0.ɵɵtemplate(2, DataTableComponent_tr_2_Template, 1, 0, \"tr\", 2);\n        i0.ɵɵtemplate(3, DataTableComponent_tr_3_Template, 1, 0, \"tr\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, DataTableComponent_mat_paginator_4_Template, 1, 4, \"mat-paginator\", 4);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"table-fixed\", ctx.columnWidth);\n        i0.ɵɵproperty(\"dataSource\", ctx.rows);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.columns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.paginate);\n      }\n    },\n    directives: [i1.MatTable, i2.NgForOf, i1.MatColumnDef, i1.MatHeaderCellDef, i1.MatHeaderCell, i1.MatCellDef, i1.MatCell, i2.NgSwitch, i2.NgSwitchCase, i2.NgTemplateOutlet, i2.NgSwitchDefault, i1.MatHeaderRowDef, i1.MatHeaderRow, i1.MatRowDef, i1.MatRow, i2.NgIf, i3.MatPaginator],\n    styles: [\"\"],\n    encapsulation: 2\n  });\n  return DataTableComponent;\n})();\nconst actions = [{\n  id: 'delete',\n  label: 'Delete',\n  icon: 'heroicons_outline:trash',\n  color: 'red'\n}, {\n  id: 'edit',\n  label: 'Edit',\n  icon: 'heroicons_outline:pencil-alt',\n  color: 'orange'\n}, {\n  id: 'lock',\n  label: 'Lock',\n  icon: 'heroicons_outline:lock-closed',\n  color: 'red'\n}, {\n  id: 'resetPassword',\n  label: 'Reset Password',\n  icon: 'heroicons_outline:refresh',\n  color: 'red'\n}, {\n  id: 'view',\n  label: 'View',\n  icon: 'heroicons_outline:eye',\n  color: 'primary'\n}];","map":null,"metadata":{},"sourceType":"module"}