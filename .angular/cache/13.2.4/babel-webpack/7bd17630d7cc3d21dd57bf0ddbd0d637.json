{"ast":null,"code":"import { NavigationEnd } from '@angular/router';\nimport { filter, Subject, takeUntil } from 'rxjs';\nimport { fuseAnimations } from '@fuse/animations';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@fuse/components/navigation/navigation.service\";\nimport * as i3 from \"../../../../../../app/shared/directives/has-any-authority.directive\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/tooltip\";\nimport * as i6 from \"@angular/material/icon\";\nimport * as i7 from \"@fuse/components/navigation/vertical/components/basic/basic.component\";\nimport * as i8 from \"@fuse/components/navigation/vertical/components/divider/divider.component\";\nimport * as i9 from \"@fuse/components/navigation/vertical/components/group/group.component\";\nimport * as i10 from \"@fuse/components/navigation/vertical/components/spacer/spacer.component\";\n\nfunction FuseVerticalNavigationCollapsableItemComponent_div_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"mat-icon\", 9);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r2.item.classes == null ? null : ctx_r2.item.classes.icon)(\"svgIcon\", ctx_r2.item.icon);\n  }\n}\n\nfunction FuseVerticalNavigationCollapsableItemComponent_div_0_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 10)(2, \"span\", 7);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r3.item.classes == null ? null : ctx_r3.item.classes.subtitle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.item.subtitle, \" \");\n  }\n}\n\nfunction FuseVerticalNavigationCollapsableItemComponent_div_0_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 11)(2, \"div\", 12);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r4.item.badge.classes);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.item.badge.title, \" \");\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"fuse-vertical-navigation-item-disabled\": a0\n  };\n};\n\nfunction FuseVerticalNavigationCollapsableItemComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3);\n    i0.ɵɵlistener(\"click\", function FuseVerticalNavigationCollapsableItemComponent_div_0_Template_div_click_1_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.toggleCollapsable();\n    });\n    i0.ɵɵtemplate(2, FuseVerticalNavigationCollapsableItemComponent_div_0_ng_container_2_Template, 2, 2, \"ng-container\", 4);\n    i0.ɵɵelementStart(3, \"div\", 5)(4, \"div\", 6)(5, \"span\", 7);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(7, FuseVerticalNavigationCollapsableItemComponent_div_0_ng_container_7_Template, 4, 2, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, FuseVerticalNavigationCollapsableItemComponent_div_0_ng_container_8_Template, 4, 2, \"ng-container\", 4);\n    i0.ɵɵelement(9, \"mat-icon\", 8);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"fuse-vertical-navigation-item-has-subtitle\", !!ctx_r0.item.subtitle);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.item.classes == null ? null : ctx_r0.item.classes.wrapper);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c0, ctx_r0.item.disabled))(\"matTooltip\", ctx_r0.item.tooltip || \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.item.icon);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.item.classes == null ? null : ctx_r0.item.classes.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.item.title, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.item.subtitle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.item.badge);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"svgIcon\", \"heroicons_solid:chevron-right\");\n  }\n}\n\nfunction FuseVerticalNavigationCollapsableItemComponent_div_1_ng_container_1_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"fuse-vertical-navigation-basic-item\", 15);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r8 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"item\", item_r8)(\"name\", ctx_r10.name);\n  }\n}\n\nfunction FuseVerticalNavigationCollapsableItemComponent_div_1_ng_container_1_ng_container_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"fuse-vertical-navigation-collapsable-item\", 16);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r8 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"item\", item_r8)(\"name\", ctx_r11.name)(\"autoCollapse\", ctx_r11.autoCollapse);\n  }\n}\n\nfunction FuseVerticalNavigationCollapsableItemComponent_div_1_ng_container_1_ng_container_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"fuse-vertical-navigation-divider-item\", 15);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r8 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"item\", item_r8)(\"name\", ctx_r12.name);\n  }\n}\n\nfunction FuseVerticalNavigationCollapsableItemComponent_div_1_ng_container_1_ng_container_1_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"fuse-vertical-navigation-group-item\", 15);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r8 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"item\", item_r8)(\"name\", ctx_r13.name);\n  }\n}\n\nfunction FuseVerticalNavigationCollapsableItemComponent_div_1_ng_container_1_ng_container_1_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"fuse-vertical-navigation-spacer-item\", 15);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r8 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"item\", item_r8)(\"name\", ctx_r14.name);\n  }\n}\n\nfunction FuseVerticalNavigationCollapsableItemComponent_div_1_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, FuseVerticalNavigationCollapsableItemComponent_div_1_ng_container_1_ng_container_1_ng_container_1_Template, 2, 2, \"ng-container\", 4);\n    i0.ɵɵtemplate(2, FuseVerticalNavigationCollapsableItemComponent_div_1_ng_container_1_ng_container_1_ng_container_2_Template, 2, 3, \"ng-container\", 4);\n    i0.ɵɵtemplate(3, FuseVerticalNavigationCollapsableItemComponent_div_1_ng_container_1_ng_container_1_ng_container_3_Template, 2, 2, \"ng-container\", 4);\n    i0.ɵɵtemplate(4, FuseVerticalNavigationCollapsableItemComponent_div_1_ng_container_1_ng_container_1_ng_container_4_Template, 2, 2, \"ng-container\", 4);\n    i0.ɵɵtemplate(5, FuseVerticalNavigationCollapsableItemComponent_div_1_ng_container_1_ng_container_1_ng_container_5_Template, 2, 2, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r8 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r8.type === \"basic\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r8.type === \"collapsable\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r8.type === \"divider\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r8.type === \"group\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r8.type === \"spacer\");\n  }\n}\n\nfunction FuseVerticalNavigationCollapsableItemComponent_div_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, FuseVerticalNavigationCollapsableItemComponent_div_1_ng_container_1_ng_container_1_Template, 6, 5, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r8.hidden && !item_r8.hidden(item_r8) || !item_r8.hidden);\n  }\n}\n\nfunction FuseVerticalNavigationCollapsableItemComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtemplate(1, FuseVerticalNavigationCollapsableItemComponent_div_1_ng_container_1_Template, 2, 1, \"ng-container\", 14);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@expandCollapse\", undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.item.children)(\"ngForTrackBy\", ctx_r1.trackByFn);\n  }\n}\n\nexport let FuseVerticalNavigationCollapsableItemComponent = /*#__PURE__*/(() => {\n  class FuseVerticalNavigationCollapsableItemComponent {\n    /**\n     * Constructor\n     */\n    constructor(_changeDetectorRef, _router, _fuseNavigationService) {\n      this._changeDetectorRef = _changeDetectorRef;\n      this._router = _router;\n      this._fuseNavigationService = _fuseNavigationService;\n      this.isCollapsed = true;\n      this.isExpanded = false;\n      this._unsubscribeAll = new Subject();\n    } // -----------------------------------------------------------------------------------------------------\n    // @ Accessors\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Host binding for component classes\n     */\n\n\n    get classList() {\n      return {\n        'fuse-vertical-navigation-item-collapsed': this.isCollapsed,\n        'fuse-vertical-navigation-item-expanded': this.isExpanded\n      };\n    } // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n\n\n    ngOnInit() {\n      // Get the parent navigation component\n      this._fuseVerticalNavigationComponent = this._fuseNavigationService.getComponent(this.name); // If the item has a children that has a matching url with the current url, expand...\n\n      if (this._hasActiveChild(this.item, this._router.url)) {\n        this.expand();\n      } // Otherwise...\n      else {\n        // If the autoCollapse is on, collapse...\n        if (this.autoCollapse) {\n          this.collapse();\n        }\n      } // Listen for the onCollapsableItemCollapsed from the service\n\n\n      this._fuseVerticalNavigationComponent.onCollapsableItemCollapsed.pipe(takeUntil(this._unsubscribeAll)).subscribe(collapsedItem => {\n        // Check if the collapsed item is null\n        if (collapsedItem === null) {\n          return;\n        } // Collapse if this is a children of the collapsed item\n\n\n        if (this._isChildrenOf(collapsedItem, this.item)) {\n          this.collapse();\n        }\n      }); // Listen for the onCollapsableItemExpanded from the service if the autoCollapse is on\n\n\n      if (this.autoCollapse) {\n        this._fuseVerticalNavigationComponent.onCollapsableItemExpanded.pipe(takeUntil(this._unsubscribeAll)).subscribe(expandedItem => {\n          // Check if the expanded item is null\n          if (expandedItem === null) {\n            return;\n          } // Check if this is a parent of the expanded item\n\n\n          if (this._isChildrenOf(this.item, expandedItem)) {\n            return;\n          } // Check if this has a children with a matching url with the current active url\n\n\n          if (this._hasActiveChild(this.item, this._router.url)) {\n            return;\n          } // Check if this is the expanded item\n\n\n          if (this.item === expandedItem) {\n            return;\n          } // If none of the above conditions are matched, collapse this item\n\n\n          this.collapse();\n        });\n      } // Attach a listener to the NavigationEnd event\n\n\n      this._router.events.pipe(filter(event => event instanceof NavigationEnd), takeUntil(this._unsubscribeAll)).subscribe(event => {\n        // If the item has a children that has a matching url with the current url, expand...\n        if (this._hasActiveChild(this.item, event.urlAfterRedirects)) {\n          this.expand();\n        } // Otherwise...\n        else {\n          // If the autoCollapse is on, collapse...\n          if (this.autoCollapse) {\n            this.collapse();\n          }\n        }\n      }); // Subscribe to onRefreshed on the navigation component\n\n\n      this._fuseVerticalNavigationComponent.onRefreshed.pipe(takeUntil(this._unsubscribeAll)).subscribe(() => {\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n    /**\n     * On destroy\n     */\n\n\n    ngOnDestroy() {\n      // Unsubscribe from all subscriptions\n      this._unsubscribeAll.next(null);\n\n      this._unsubscribeAll.complete();\n    } // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Collapse\n     */\n\n\n    collapse() {\n      // Return if the item is disabled\n      if (this.item.disabled) {\n        return;\n      } // Return if the item is already collapsed\n\n\n      if (this.isCollapsed) {\n        return;\n      } // Collapse it\n\n\n      this.isCollapsed = true;\n      this.isExpanded = !this.isCollapsed; // Mark for check\n\n      this._changeDetectorRef.markForCheck(); // Execute the observable\n\n\n      this._fuseVerticalNavigationComponent.onCollapsableItemCollapsed.next(this.item);\n    }\n    /**\n     * Expand\n     */\n\n\n    expand() {\n      // Return if the item is disabled\n      if (this.item.disabled) {\n        return;\n      } // Return if the item is already expanded\n\n\n      if (!this.isCollapsed) {\n        return;\n      } // Expand it\n\n\n      this.isCollapsed = false;\n      this.isExpanded = !this.isCollapsed; // Mark for check\n\n      this._changeDetectorRef.markForCheck(); // Execute the observable\n\n\n      this._fuseVerticalNavigationComponent.onCollapsableItemExpanded.next(this.item);\n    }\n    /**\n     * Toggle collapsable\n     */\n\n\n    toggleCollapsable() {\n      // Toggle collapse/expand\n      if (this.isCollapsed) {\n        this.expand();\n      } else {\n        this.collapse();\n      }\n    }\n    /**\n     * Track by function for ngFor loops\n     *\n     * @param index\n     * @param item\n     */\n\n\n    trackByFn(index, item) {\n      return item.id || index;\n    } // -----------------------------------------------------------------------------------------------------\n    // @ Private methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Check if the given item has the given url\n     * in one of its children\n     *\n     * @param item\n     * @param currentUrl\n     * @private\n     */\n\n\n    _hasActiveChild(item, currentUrl) {\n      const children = item.children;\n\n      if (!children) {\n        return false;\n      }\n\n      for (const child of children) {\n        if (child.children) {\n          if (this._hasActiveChild(child, currentUrl)) {\n            return true;\n          }\n        } // Check if the child has a link and is active\n\n\n        if (child.link && this._router.isActive(child.link, child.exactMatch || false)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Check if this is a children\n     * of the given item\n     *\n     * @param parent\n     * @param item\n     * @private\n     */\n\n\n    _isChildrenOf(parent, item) {\n      const children = parent.children;\n\n      if (!children) {\n        return false;\n      }\n\n      if (children.indexOf(item) > -1) {\n        return true;\n      }\n\n      for (const child of children) {\n        if (child.children) {\n          if (this._isChildrenOf(child, item)) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    }\n\n  }\n\n  FuseVerticalNavigationCollapsableItemComponent.ɵfac = function FuseVerticalNavigationCollapsableItemComponent_Factory(t) {\n    return new (t || FuseVerticalNavigationCollapsableItemComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FuseNavigationService));\n  };\n\n  FuseVerticalNavigationCollapsableItemComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FuseVerticalNavigationCollapsableItemComponent,\n    selectors: [[\"fuse-vertical-navigation-collapsable-item\"]],\n    hostVars: 2,\n    hostBindings: function FuseVerticalNavigationCollapsableItemComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.classList);\n      }\n    },\n    inputs: {\n      autoCollapse: \"autoCollapse\",\n      item: \"item\",\n      name: \"name\"\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[\"class\", \"fuse-vertical-navigation-item-wrapper\", 3, \"fuse-vertical-navigation-item-has-subtitle\", \"ngClass\", 4, \"hasAnyAuthority\"], [\"class\", \"fuse-vertical-navigation-item-children\", 4, \"ngIf\"], [1, \"fuse-vertical-navigation-item-wrapper\", 3, \"ngClass\"], [1, \"fuse-vertical-navigation-item\", 3, \"ngClass\", \"matTooltip\", \"click\"], [4, \"ngIf\"], [1, \"fuse-vertical-navigation-item-title-wrapper\"], [1, \"fuse-vertical-navigation-item-title\"], [3, \"ngClass\"], [1, \"fuse-vertical-navigation-item-arrow\", \"icon-size-4\", 3, \"svgIcon\"], [1, \"fuse-vertical-navigation-item-icon\", 3, \"ngClass\", \"svgIcon\"], [1, \"fuse-vertical-navigation-item-subtitle\"], [1, \"fuse-vertical-navigation-item-badge\"], [1, \"fuse-vertical-navigation-item-badge-content\", 3, \"ngClass\"], [1, \"fuse-vertical-navigation-item-children\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"item\", \"name\"], [3, \"item\", \"name\", \"autoCollapse\"]],\n    template: function FuseVerticalNavigationCollapsableItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, FuseVerticalNavigationCollapsableItemComponent_div_0_Template, 10, 13, \"div\", 0);\n        i0.ɵɵtemplate(1, FuseVerticalNavigationCollapsableItemComponent_div_1_Template, 2, 3, \"div\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"hasAnyAuthority\", ctx.item.role);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isCollapsed);\n      }\n    },\n    directives: [i3.HasAnyAuthorityDirective, i4.NgClass, i5.MatTooltip, i4.NgIf, i6.MatIcon, i4.NgForOf, i7.FuseVerticalNavigationBasicItemComponent, FuseVerticalNavigationCollapsableItemComponent, i8.FuseVerticalNavigationDividerItemComponent, i9.FuseVerticalNavigationGroupItemComponent, i10.FuseVerticalNavigationSpacerItemComponent],\n    encapsulation: 2,\n    data: {\n      animation: fuseAnimations\n    },\n    changeDetection: 0\n  });\n  return FuseVerticalNavigationCollapsableItemComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}