{"ast":null,"code":"import { forkJoin } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/layout/common/messages/messages.service\";\nimport * as i2 from \"app/core/navigation/navigation.service\";\nimport * as i3 from \"app/layout/common/notifications/notifications.service\";\nimport * as i4 from \"app/layout/common/quick-chat/quick-chat.service\";\nimport * as i5 from \"app/layout/common/shortcuts/shortcuts.service\";\nimport * as i6 from \"app/core/user/user.service\";\nimport * as i7 from \"./core/auth/account.service\";\nexport let InitialDataResolver = /*#__PURE__*/(() => {\n  class InitialDataResolver {\n    /**\r\n     * Constructor\r\n     */\n    constructor(_messagesService, _navigationService, _notificationsService, _quickChatService, _shortcutsService, _userService, _accountService) {\n      this._messagesService = _messagesService;\n      this._navigationService = _navigationService;\n      this._notificationsService = _notificationsService;\n      this._quickChatService = _quickChatService;\n      this._shortcutsService = _shortcutsService;\n      this._userService = _userService;\n      this._accountService = _accountService;\n    } // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\r\n     * Use this resolver to resolve initial mock-api for the application\r\n     *\r\n     * @param route\r\n     * @param state\r\n     */\n\n\n    resolve(route, state) {\n      // Fork join multiple API endpoint calls to wait all of them to finish\n      return forkJoin([this._navigationService.get() // this._messagesService.getAll(),\n      // this._notificationsService.getAll(),\n      // this._quickChatService.getChats(),\n      // this._shortcutsService.getAll(),\n      // this._accountService.identity(true)\n      ]);\n    }\n\n  }\n\n  InitialDataResolver.ɵfac = function InitialDataResolver_Factory(t) {\n    return new (t || InitialDataResolver)(i0.ɵɵinject(i1.MessagesService), i0.ɵɵinject(i2.NavigationService), i0.ɵɵinject(i3.NotificationsService), i0.ɵɵinject(i4.QuickChatService), i0.ɵɵinject(i5.ShortcutsService), i0.ɵɵinject(i6.UserService), i0.ɵɵinject(i7.AccountService));\n  };\n\n  InitialDataResolver.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: InitialDataResolver,\n    factory: InitialDataResolver.ɵfac,\n    providedIn: 'root'\n  });\n  return InitialDataResolver;\n})();","map":null,"metadata":{},"sourceType":"module"}